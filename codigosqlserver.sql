--EL CODIGO FUE CREADO PARA SQL SERVER
--CREACION DE TABLA CLIENTE
create table CLIENTE (
   IDCLIENTE int not null,
   NOMBRE  VARCHAR(20),
   APELLIDO VARCHAR(20),
   constraint PK_CLIENTE primary key nonclustered (IDCLIENTE)
)
--INSERCIONES EN TABLA CLIENTE
INSERT INTO CLIENTE VALUES (1, 'Kevon', 'Loor');
INSERT INTO CLIENTE VALUES (2, 'LuizZ', 'TuarezzZ');
INSERT INTO CLIENTE VALUES (3, 'Erick', 'Toala');
INSERT INTO CLIENTE VALUES (4, 'lUCAS', 'PATO');
--CREAR TABLA ASISTENCIA
create table ASISTENCIA (
   IDTOUR int not null,
   IDCLIENTE int NOT null,
)
--CREAR TABLA TOUR
create table TOUR (
   IDTOUR int not null,
   CANTIDAD_CLIENTES int not null,
   IDGUIA INT not null,
   LUGAR VARCHAR(40) not null,
   ESTADO_TOUR VARCHAR(20) NOT NULL, -- ACTIVO O INACTIVO
   constraint PK_TOUR primary key nonclustered (IDTOUR)
)
--INSERCIONES EN TOUR
INSERT INTO TOUR VALUES (1,0, 1,'Isla Trinitaria','Activo');
INSERT INTO TOUR VALUES (2,0, 2, 'Ayangui','Inactivo');
--CONDICION PARA LA CANTIDAD MAXIMA DE CLIENTES, ESTO ES IMPORTANTE
ALTER TABLE TOUR ADD CHECK (CANTIDAD_CLIENTES<=3)

--CREAR TABLA GUIA
create table GUIA(
	IDGUIA INT NOT NULL,
	NOMBREGUIA VARCHAR(20),
	APELLIDOGUIA VARCHAR(20),
	constraint PK_GUIA primary key nonclustered (IDGUIA)
)

--INSERTAR GUIAS
INSERT INTO GUIA VALUES (1, 'Samantha', 'Loor');
INSERT INTO GUIA VALUES (2, 'Robert', 'Moreira');
INSERT INTO GUIA VALUES (3, 'Adres', 'tuezz');
--LLAVES FORANEAS
alter table ASISTENCIA
   add constraint FK_ASISTENCIA_TOUR foreign key (IDTOUR)
      references TOUR (IDTOUR)

alter table ASISTENCIA
   add constraint FK_ASISTENCIA_CLIENTE foreign key (IDCLIENTE)
      references CLIENTE (IDCLIENTE)


alter table TOUR
   add constraint FK_TOUR_GUIA foreign key (IDGUIA)
      references GUIA (IDGUIA)



--STORED PROCEDURE
CREATE PROCEDURE PA_INSERTAR_ASISTENCIA (@PIDTOUR INT, @PIDCLIENTEO INT)
AS
BEGIN
BEGIN TRY
BEGIN TRANSACTION
	IF EXISTS(SELECT 2 FROM TOUR WHERE IDTOUR=@PIDTOUR and ESTADO_TOUR='Activo')
		BEGIN
		insert into ASISTENCIA values(@PIDTOUR,@PIDCLIENTEO)
		update TOUR set CANTIDAD_CLIENTES=CANTIDAD_CLIENTES+1 where IDTOUR=@PIDTOUR
		END
	ELSE
		RAISERROR('El tour seleccionado está inactivo',1,4);
COMMIT TRANSACTION
END TRY
BEGIN CATCH
ROLLBACK TRANSACTION
RAISERROR('No se pudo ejecutar la transacción',1,4);
END CATCH
END


--verifique el stored procedure
--insertar asistencia
EXECUTE PA_INSERTAR_ASISTENCIA 1, 1;
EXECUTE PA_INSERTAR_ASISTENCIA 1, 2;
EXECUTE PA_INSERTAR_ASISTENCIA 1, 3;
--esta no deberia dejar insertar porq solo pusimos que puedan asisir 3 personas
EXECUTE PA_INSERTAR_ASISTENCIA 1, 4;
--estos no se pueden insertar porq el tour esta inactivo
EXECUTE PA_INSERTAR_ASISTENCIA 2, 1;
EXECUTE PA_INSERTAR_ASISTENCIA 2, 2;
EXECUTE PA_INSERTAR_ASISTENCIA 2, 3;
EXECUTE PA_INSERTAR_ASISTENCIA 2, 4;

SELECT * FROM TOUR;
select * from ASISTENCIA;
